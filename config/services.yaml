# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    GuzzleHttp\Client:
        class: GuzzleHttp\Client

    Geokit\Math:
        class: Geokit\Math

    App\Application\Factory\WeatherDtoFactoryInterface:
        class: App\Application\Factory\WeatherDtoSanitizer
        arguments:
            - '@App\Application\Factory\WeatherDtoFactory'

    App\Application\Factory\WeatherDtoFactory:
        class: App\Application\Factory\WeatherDtoFactory

    App\Domain\Rule\Temperature\TooHotOrColdRule:
        class: App\Domain\Rule\Temperature\TooHotOrColdRule
        tags:
            - { name: 'temperature_rules', priority: 30 }

    App\Domain\Rule\Temperature\HotOrColdRule:
        class: App\Domain\Rule\Temperature\HotOrColdRule
        tags:
            - { name: 'temperature_rules', priority: 20 }

    App\Domain\Rule\Temperature\MildRule:
        class: App\Domain\Rule\Temperature\MildRule
        tags:
            - { name: 'temperature_rules', priority: 10 }

    App\Domain\Rule\Rain\TooMuchRainRule:
        class: App\Domain\Rule\Rain\TooMuchRainRule
        tags:
            - { name: 'rain_rules', priority: 30 }

    App\Domain\Rule\Rain\AlotRainRule:
        class: App\Domain\Rule\Rain\AlotRainRule
        tags:
            - { name: 'rain_rules', priority: 20 }

    App\Domain\Rule\Rain\SomeRainRule:
        class: App\Domain\Rule\Rain\SomeRainRule
        tags:
            - { name: 'rain_rules', priority: 10 }

    App\Domain\Rule\Wind\TooMuchWindRule:
        class: App\Domain\Rule\Wind\TooMuchWindRule
        tags:
            - { name: 'wind_rules', priority: 30 }

    App\Domain\Rule\Wind\AlotWindRule:
        class: App\Domain\Rule\Wind\AlotWindRule
        tags:
            - { name: 'wind_rules', priority: 20 }

    App\Domain\Rule\Wind\SomeWindRule:
        class: App\Domain\Rule\Wind\SomeWindRule
        tags:
            - { name: 'wind_rules', priority: 10 }

    TemperatureRatingService:
        class: App\Domain\Service\RatingService
        arguments: [!tagged 'temperature_rules']

    RainRatingService:
        class: App\Domain\Service\RatingService
        arguments: [!tagged 'rain_rules']

    WindRatingService:
        class: App\Domain\Service\RatingService
        arguments: [!tagged 'wind_rules']

    App\Infrastructure\Factory\WeatherRatingFactory:
        class: App\Infrastructure\Factory\WeatherRatingFactory
        arguments:
            - '@TemperatureRatingService'
            - '@RainRatingService'
            - '@WindRatingService'

    App\Infrastructure\FileStorage\FileStorage:
        class: App\Infrastructure\FileStorage\FileStorage
        arguments:
            - '@filesystem'
            - '%kernel.project_dir%/var/tmp'
            - '%kernel.project_dir%/var/data'

    App\Infrastructure\Downloader\GeoLite2Downloader:
        class: App\Infrastructure\Downloader\GeoLite2Downloader
        arguments:
            $licenseKey: '%env(string:MAXMIND_LICENSE_KEY)%'

    GeoIp2\Database\Reader:
        class: GeoIp2\Database\Reader
        arguments:
            - '%kernel.project_dir%/var/data/GeoLite2-City.mmdb'

    League\Csv\Reader:
        class: League\Csv\Reader
        factory: ['League\Csv\Reader', 'createFromPath']
        arguments:
            - '%kernel.project_dir%/assets/data/postcodes.csv'
            - 'r'
